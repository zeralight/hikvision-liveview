/* soapAdvancedSecurityServiceBindingProxy.cpp
   Generated by gSOAP 2.8.82 for soap/onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapAdvancedSecurityServiceBindingProxy.h"

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	AdvancedSecurityServiceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy(const AdvancedSecurityServiceBindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	AdvancedSecurityServiceBindingProxy_init(_soap->imode, _soap->omode);
}

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy(struct soap *_soap, const char *soap_endpoint_url)
{	this->soap = _soap;
	this->soap_own = false;
	AdvancedSecurityServiceBindingProxy_init(_soap->imode, _soap->omode);
	soap_endpoint = soap_endpoint_url;
}

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy(const char *soap_endpoint_url)
{	this->soap = soap_new();
	this->soap_own = true;
	AdvancedSecurityServiceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = soap_endpoint_url;
}

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	AdvancedSecurityServiceBindingProxy_init(iomode, iomode);
}

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy(const char *soap_endpoint_url, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	AdvancedSecurityServiceBindingProxy_init(iomode, iomode);
	soap_endpoint = soap_endpoint_url;
}

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	AdvancedSecurityServiceBindingProxy_init(imode, omode);
}

AdvancedSecurityServiceBindingProxy::~AdvancedSecurityServiceBindingProxy()
{	if (this->soap_own)
	{	this->destroy();
		soap_free(this->soap);
	}
}

void AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        { "SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL },
        { "SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL },
        { "xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL },
        { "xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL },
        { "c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL },
        { "ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL },
        { "saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL },
        { "saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL },
        { "wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL },
        { "xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL },
        { "wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", "http://schemas.xmlsoap.org/ws/2005/02/sc", NULL },
        { "wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL },
        { "chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL },
        { "wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL },
        { "wsdd", "http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01", NULL, NULL },
        { "xmime", "http://tempuri.org/xmime.xsd", NULL, NULL },
        { "xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL },
        { "tt", "http://www.onvif.org/ver10/schema", NULL, NULL },
        { "wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL },
        { "wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL },
        { "wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL },
        { "ns1", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL },
        { "tdn", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL },
        { "tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL },
        { "tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL },
        { "wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL },
        { "timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL },
        { "tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL },
        { "tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL },
        { "trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL },
        { NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

AdvancedSecurityServiceBindingProxy *AdvancedSecurityServiceBindingProxy::copy()
{	AdvancedSecurityServiceBindingProxy *dup = SOAP_NEW_UNMANAGED(AdvancedSecurityServiceBindingProxy);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}

AdvancedSecurityServiceBindingProxy& AdvancedSecurityServiceBindingProxy::operator=(const AdvancedSecurityServiceBindingProxy& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
		this->soap_endpoint = rhs.soap_endpoint;
	}
	return *this;
}

void AdvancedSecurityServiceBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void AdvancedSecurityServiceBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	AdvancedSecurityServiceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void AdvancedSecurityServiceBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void AdvancedSecurityServiceBindingProxy::soap_header(struct _wsse__Security *wsse__Security, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence)
{
	::soap_header(this->soap);
	this->soap->header->wsse__Security = wsse__Security;
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
}

::SOAP_ENV__Header *AdvancedSecurityServiceBindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *AdvancedSecurityServiceBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *AdvancedSecurityServiceBindingProxy::soap_fault_subcode()
{	return ::soap_fault_subcode(this->soap);
}

const char *AdvancedSecurityServiceBindingProxy::soap_fault_string()
{	return ::soap_fault_string(this->soap);
}

const char *AdvancedSecurityServiceBindingProxy::soap_fault_detail()
{	return ::soap_fault_detail(this->soap);
}

int AdvancedSecurityServiceBindingProxy::soap_close_socket()
{	return ::soap_closesock(this->soap);
}

int AdvancedSecurityServiceBindingProxy::soap_force_close_socket()
{	return ::soap_force_closesock(this->soap);
}

void AdvancedSecurityServiceBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void AdvancedSecurityServiceBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *AdvancedSecurityServiceBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int AdvancedSecurityServiceBindingProxy::send_GetServiceCapabilities(const char *soap_endpoint_url, const char *soap_action, _ns1__GetServiceCapabilities *ns1__GetServiceCapabilities)
{
	struct __ns1__GetServiceCapabilities soap_tmp___ns1__GetServiceCapabilities;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetServiceCapabilities";
	soap_tmp___ns1__GetServiceCapabilities.ns1__GetServiceCapabilities = ns1__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities, "-ns1:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities, "-ns1:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetServiceCapabilities(_ns1__GetServiceCapabilitiesResponse &ns1__GetServiceCapabilitiesResponse)
{
	ns1__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetServiceCapabilitiesResponse.soap_get(soap, "ns1:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_CreateRSAKeyPair(const char *soap_endpoint_url, const char *soap_action, _ns1__CreateRSAKeyPair *ns1__CreateRSAKeyPair)
{
	struct __ns1__CreateRSAKeyPair soap_tmp___ns1__CreateRSAKeyPair;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateRSAKeyPair";
	soap_tmp___ns1__CreateRSAKeyPair.ns1__CreateRSAKeyPair = ns1__CreateRSAKeyPair;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateRSAKeyPair(soap, &soap_tmp___ns1__CreateRSAKeyPair);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateRSAKeyPair(soap, &soap_tmp___ns1__CreateRSAKeyPair, "-ns1:CreateRSAKeyPair", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateRSAKeyPair(soap, &soap_tmp___ns1__CreateRSAKeyPair, "-ns1:CreateRSAKeyPair", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_CreateRSAKeyPair(_ns1__CreateRSAKeyPairResponse &ns1__CreateRSAKeyPairResponse)
{
	ns1__CreateRSAKeyPairResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateRSAKeyPairResponse.soap_get(soap, "ns1:CreateRSAKeyPairResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_UploadKeyPairInPKCS8(const char *soap_endpoint_url, const char *soap_action, _ns1__UploadKeyPairInPKCS8 *ns1__UploadKeyPairInPKCS8)
{
	struct __ns1__UploadKeyPairInPKCS8 soap_tmp___ns1__UploadKeyPairInPKCS8;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadKeyPairInPKCS8";
	soap_tmp___ns1__UploadKeyPairInPKCS8.ns1__UploadKeyPairInPKCS8 = ns1__UploadKeyPairInPKCS8;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadKeyPairInPKCS8(soap, &soap_tmp___ns1__UploadKeyPairInPKCS8);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadKeyPairInPKCS8(soap, &soap_tmp___ns1__UploadKeyPairInPKCS8, "-ns1:UploadKeyPairInPKCS8", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadKeyPairInPKCS8(soap, &soap_tmp___ns1__UploadKeyPairInPKCS8, "-ns1:UploadKeyPairInPKCS8", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_UploadKeyPairInPKCS8(_ns1__UploadKeyPairInPKCS8Response &ns1__UploadKeyPairInPKCS8Response)
{
	ns1__UploadKeyPairInPKCS8Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadKeyPairInPKCS8Response.soap_get(soap, "ns1:UploadKeyPairInPKCS8Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_UploadCertificateWithPrivateKeyInPKCS12(const char *soap_endpoint_url, const char *soap_action, _ns1__UploadCertificateWithPrivateKeyInPKCS12 *ns1__UploadCertificateWithPrivateKeyInPKCS12)
{
	struct __ns1__UploadCertificateWithPrivateKeyInPKCS12 soap_tmp___ns1__UploadCertificateWithPrivateKeyInPKCS12;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificateWithPrivateKeyInPKCS12";
	soap_tmp___ns1__UploadCertificateWithPrivateKeyInPKCS12.ns1__UploadCertificateWithPrivateKeyInPKCS12 = ns1__UploadCertificateWithPrivateKeyInPKCS12;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadCertificateWithPrivateKeyInPKCS12(soap, &soap_tmp___ns1__UploadCertificateWithPrivateKeyInPKCS12);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadCertificateWithPrivateKeyInPKCS12(soap, &soap_tmp___ns1__UploadCertificateWithPrivateKeyInPKCS12, "-ns1:UploadCertificateWithPrivateKeyInPKCS12", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadCertificateWithPrivateKeyInPKCS12(soap, &soap_tmp___ns1__UploadCertificateWithPrivateKeyInPKCS12, "-ns1:UploadCertificateWithPrivateKeyInPKCS12", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_UploadCertificateWithPrivateKeyInPKCS12(_ns1__UploadCertificateWithPrivateKeyInPKCS12Response &ns1__UploadCertificateWithPrivateKeyInPKCS12Response)
{
	ns1__UploadCertificateWithPrivateKeyInPKCS12Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadCertificateWithPrivateKeyInPKCS12Response.soap_get(soap, "ns1:UploadCertificateWithPrivateKeyInPKCS12Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetKeyStatus(const char *soap_endpoint_url, const char *soap_action, _ns1__GetKeyStatus *ns1__GetKeyStatus)
{
	struct __ns1__GetKeyStatus soap_tmp___ns1__GetKeyStatus;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetKeyStatus";
	soap_tmp___ns1__GetKeyStatus.ns1__GetKeyStatus = ns1__GetKeyStatus;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetKeyStatus(soap, &soap_tmp___ns1__GetKeyStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetKeyStatus(soap, &soap_tmp___ns1__GetKeyStatus, "-ns1:GetKeyStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetKeyStatus(soap, &soap_tmp___ns1__GetKeyStatus, "-ns1:GetKeyStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetKeyStatus(_ns1__GetKeyStatusResponse &ns1__GetKeyStatusResponse)
{
	ns1__GetKeyStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetKeyStatusResponse.soap_get(soap, "ns1:GetKeyStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetPrivateKeyStatus(const char *soap_endpoint_url, const char *soap_action, _ns1__GetPrivateKeyStatus *ns1__GetPrivateKeyStatus)
{
	struct __ns1__GetPrivateKeyStatus soap_tmp___ns1__GetPrivateKeyStatus;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetPrivateKeyStatus";
	soap_tmp___ns1__GetPrivateKeyStatus.ns1__GetPrivateKeyStatus = ns1__GetPrivateKeyStatus;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetPrivateKeyStatus(soap, &soap_tmp___ns1__GetPrivateKeyStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetPrivateKeyStatus(soap, &soap_tmp___ns1__GetPrivateKeyStatus, "-ns1:GetPrivateKeyStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetPrivateKeyStatus(soap, &soap_tmp___ns1__GetPrivateKeyStatus, "-ns1:GetPrivateKeyStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetPrivateKeyStatus(_ns1__GetPrivateKeyStatusResponse &ns1__GetPrivateKeyStatusResponse)
{
	ns1__GetPrivateKeyStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPrivateKeyStatusResponse.soap_get(soap, "ns1:GetPrivateKeyStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetAllKeys(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAllKeys *ns1__GetAllKeys)
{
	struct __ns1__GetAllKeys soap_tmp___ns1__GetAllKeys;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllKeys";
	soap_tmp___ns1__GetAllKeys.ns1__GetAllKeys = ns1__GetAllKeys;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAllKeys(soap, &soap_tmp___ns1__GetAllKeys);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAllKeys(soap, &soap_tmp___ns1__GetAllKeys, "-ns1:GetAllKeys", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAllKeys(soap, &soap_tmp___ns1__GetAllKeys, "-ns1:GetAllKeys", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetAllKeys(_ns1__GetAllKeysResponse &ns1__GetAllKeysResponse)
{
	ns1__GetAllKeysResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAllKeysResponse.soap_get(soap, "ns1:GetAllKeysResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_DeleteKey(const char *soap_endpoint_url, const char *soap_action, _ns1__DeleteKey *ns1__DeleteKey)
{
	struct __ns1__DeleteKey soap_tmp___ns1__DeleteKey;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteKey";
	soap_tmp___ns1__DeleteKey.ns1__DeleteKey = ns1__DeleteKey;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteKey(soap, &soap_tmp___ns1__DeleteKey);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteKey(soap, &soap_tmp___ns1__DeleteKey, "-ns1:DeleteKey", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteKey(soap, &soap_tmp___ns1__DeleteKey, "-ns1:DeleteKey", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_DeleteKey(_ns1__DeleteKeyResponse &ns1__DeleteKeyResponse)
{
	ns1__DeleteKeyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteKeyResponse.soap_get(soap, "ns1:DeleteKeyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_CreatePKCS10CSR(const char *soap_endpoint_url, const char *soap_action, _ns1__CreatePKCS10CSR *ns1__CreatePKCS10CSR)
{
	struct __ns1__CreatePKCS10CSR soap_tmp___ns1__CreatePKCS10CSR;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreatePKCS10CSR";
	soap_tmp___ns1__CreatePKCS10CSR.ns1__CreatePKCS10CSR = ns1__CreatePKCS10CSR;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__CreatePKCS10CSR(soap, &soap_tmp___ns1__CreatePKCS10CSR);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreatePKCS10CSR(soap, &soap_tmp___ns1__CreatePKCS10CSR, "-ns1:CreatePKCS10CSR", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreatePKCS10CSR(soap, &soap_tmp___ns1__CreatePKCS10CSR, "-ns1:CreatePKCS10CSR", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_CreatePKCS10CSR(_ns1__CreatePKCS10CSRResponse &ns1__CreatePKCS10CSRResponse)
{
	ns1__CreatePKCS10CSRResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreatePKCS10CSRResponse.soap_get(soap, "ns1:CreatePKCS10CSRResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_CreateSelfSignedCertificate(const char *soap_endpoint_url, const char *soap_action, _ns1__CreateSelfSignedCertificate *ns1__CreateSelfSignedCertificate)
{
	struct __ns1__CreateSelfSignedCertificate soap_tmp___ns1__CreateSelfSignedCertificate;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateSelfSignedCertificate";
	soap_tmp___ns1__CreateSelfSignedCertificate.ns1__CreateSelfSignedCertificate = ns1__CreateSelfSignedCertificate;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateSelfSignedCertificate(soap, &soap_tmp___ns1__CreateSelfSignedCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateSelfSignedCertificate(soap, &soap_tmp___ns1__CreateSelfSignedCertificate, "-ns1:CreateSelfSignedCertificate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateSelfSignedCertificate(soap, &soap_tmp___ns1__CreateSelfSignedCertificate, "-ns1:CreateSelfSignedCertificate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_CreateSelfSignedCertificate(_ns1__CreateSelfSignedCertificateResponse &ns1__CreateSelfSignedCertificateResponse)
{
	ns1__CreateSelfSignedCertificateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateSelfSignedCertificateResponse.soap_get(soap, "ns1:CreateSelfSignedCertificateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_UploadCertificate(const char *soap_endpoint_url, const char *soap_action, _ns1__UploadCertificate *ns1__UploadCertificate)
{
	struct __ns1__UploadCertificate soap_tmp___ns1__UploadCertificate;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificate";
	soap_tmp___ns1__UploadCertificate.ns1__UploadCertificate = ns1__UploadCertificate;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadCertificate(soap, &soap_tmp___ns1__UploadCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadCertificate(soap, &soap_tmp___ns1__UploadCertificate, "-ns1:UploadCertificate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadCertificate(soap, &soap_tmp___ns1__UploadCertificate, "-ns1:UploadCertificate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_UploadCertificate(_ns1__UploadCertificateResponse &ns1__UploadCertificateResponse)
{
	ns1__UploadCertificateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadCertificateResponse.soap_get(soap, "ns1:UploadCertificateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetCertificate(const char *soap_endpoint_url, const char *soap_action, _ns1__GetCertificate *ns1__GetCertificate)
{
	struct __ns1__GetCertificate soap_tmp___ns1__GetCertificate;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificate";
	soap_tmp___ns1__GetCertificate.ns1__GetCertificate = ns1__GetCertificate;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetCertificate(soap, &soap_tmp___ns1__GetCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetCertificate(soap, &soap_tmp___ns1__GetCertificate, "-ns1:GetCertificate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetCertificate(soap, &soap_tmp___ns1__GetCertificate, "-ns1:GetCertificate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetCertificate(_ns1__GetCertificateResponse &ns1__GetCertificateResponse)
{
	ns1__GetCertificateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetCertificateResponse.soap_get(soap, "ns1:GetCertificateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetAllCertificates(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAllCertificates *ns1__GetAllCertificates)
{
	struct __ns1__GetAllCertificates soap_tmp___ns1__GetAllCertificates;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificates";
	soap_tmp___ns1__GetAllCertificates.ns1__GetAllCertificates = ns1__GetAllCertificates;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAllCertificates(soap, &soap_tmp___ns1__GetAllCertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAllCertificates(soap, &soap_tmp___ns1__GetAllCertificates, "-ns1:GetAllCertificates", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAllCertificates(soap, &soap_tmp___ns1__GetAllCertificates, "-ns1:GetAllCertificates", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetAllCertificates(_ns1__GetAllCertificatesResponse &ns1__GetAllCertificatesResponse)
{
	ns1__GetAllCertificatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAllCertificatesResponse.soap_get(soap, "ns1:GetAllCertificatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_DeleteCertificate(const char *soap_endpoint_url, const char *soap_action, _ns1__DeleteCertificate *ns1__DeleteCertificate)
{
	struct __ns1__DeleteCertificate soap_tmp___ns1__DeleteCertificate;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificate";
	soap_tmp___ns1__DeleteCertificate.ns1__DeleteCertificate = ns1__DeleteCertificate;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteCertificate(soap, &soap_tmp___ns1__DeleteCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteCertificate(soap, &soap_tmp___ns1__DeleteCertificate, "-ns1:DeleteCertificate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteCertificate(soap, &soap_tmp___ns1__DeleteCertificate, "-ns1:DeleteCertificate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_DeleteCertificate(_ns1__DeleteCertificateResponse &ns1__DeleteCertificateResponse)
{
	ns1__DeleteCertificateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteCertificateResponse.soap_get(soap, "ns1:DeleteCertificateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_CreateCertificationPath(const char *soap_endpoint_url, const char *soap_action, _ns1__CreateCertificationPath *ns1__CreateCertificationPath)
{
	struct __ns1__CreateCertificationPath soap_tmp___ns1__CreateCertificationPath;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertificationPath";
	soap_tmp___ns1__CreateCertificationPath.ns1__CreateCertificationPath = ns1__CreateCertificationPath;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateCertificationPath(soap, &soap_tmp___ns1__CreateCertificationPath);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateCertificationPath(soap, &soap_tmp___ns1__CreateCertificationPath, "-ns1:CreateCertificationPath", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateCertificationPath(soap, &soap_tmp___ns1__CreateCertificationPath, "-ns1:CreateCertificationPath", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_CreateCertificationPath(_ns1__CreateCertificationPathResponse &ns1__CreateCertificationPathResponse)
{
	ns1__CreateCertificationPathResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateCertificationPathResponse.soap_get(soap, "ns1:CreateCertificationPathResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetCertificationPath(const char *soap_endpoint_url, const char *soap_action, _ns1__GetCertificationPath *ns1__GetCertificationPath)
{
	struct __ns1__GetCertificationPath soap_tmp___ns1__GetCertificationPath;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificationPath";
	soap_tmp___ns1__GetCertificationPath.ns1__GetCertificationPath = ns1__GetCertificationPath;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetCertificationPath(soap, &soap_tmp___ns1__GetCertificationPath);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetCertificationPath(soap, &soap_tmp___ns1__GetCertificationPath, "-ns1:GetCertificationPath", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetCertificationPath(soap, &soap_tmp___ns1__GetCertificationPath, "-ns1:GetCertificationPath", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetCertificationPath(_ns1__GetCertificationPathResponse &ns1__GetCertificationPathResponse)
{
	ns1__GetCertificationPathResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetCertificationPathResponse.soap_get(soap, "ns1:GetCertificationPathResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetAllCertificationPaths(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAllCertificationPaths *ns1__GetAllCertificationPaths)
{
	struct __ns1__GetAllCertificationPaths soap_tmp___ns1__GetAllCertificationPaths;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificationPaths";
	soap_tmp___ns1__GetAllCertificationPaths.ns1__GetAllCertificationPaths = ns1__GetAllCertificationPaths;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAllCertificationPaths(soap, &soap_tmp___ns1__GetAllCertificationPaths);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAllCertificationPaths(soap, &soap_tmp___ns1__GetAllCertificationPaths, "-ns1:GetAllCertificationPaths", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAllCertificationPaths(soap, &soap_tmp___ns1__GetAllCertificationPaths, "-ns1:GetAllCertificationPaths", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetAllCertificationPaths(_ns1__GetAllCertificationPathsResponse &ns1__GetAllCertificationPathsResponse)
{
	ns1__GetAllCertificationPathsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAllCertificationPathsResponse.soap_get(soap, "ns1:GetAllCertificationPathsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_DeleteCertificationPath(const char *soap_endpoint_url, const char *soap_action, _ns1__DeleteCertificationPath *ns1__DeleteCertificationPath)
{
	struct __ns1__DeleteCertificationPath soap_tmp___ns1__DeleteCertificationPath;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificationPath";
	soap_tmp___ns1__DeleteCertificationPath.ns1__DeleteCertificationPath = ns1__DeleteCertificationPath;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteCertificationPath(soap, &soap_tmp___ns1__DeleteCertificationPath);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteCertificationPath(soap, &soap_tmp___ns1__DeleteCertificationPath, "-ns1:DeleteCertificationPath", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteCertificationPath(soap, &soap_tmp___ns1__DeleteCertificationPath, "-ns1:DeleteCertificationPath", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_DeleteCertificationPath(_ns1__DeleteCertificationPathResponse &ns1__DeleteCertificationPathResponse)
{
	ns1__DeleteCertificationPathResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteCertificationPathResponse.soap_get(soap, "ns1:DeleteCertificationPathResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_UploadPassphrase(const char *soap_endpoint_url, const char *soap_action, _ns1__UploadPassphrase *ns1__UploadPassphrase)
{
	struct __ns1__UploadPassphrase soap_tmp___ns1__UploadPassphrase;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadPassphrase";
	soap_tmp___ns1__UploadPassphrase.ns1__UploadPassphrase = ns1__UploadPassphrase;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadPassphrase(soap, &soap_tmp___ns1__UploadPassphrase);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadPassphrase(soap, &soap_tmp___ns1__UploadPassphrase, "-ns1:UploadPassphrase", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadPassphrase(soap, &soap_tmp___ns1__UploadPassphrase, "-ns1:UploadPassphrase", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_UploadPassphrase(_ns1__UploadPassphraseResponse &ns1__UploadPassphraseResponse)
{
	ns1__UploadPassphraseResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadPassphraseResponse.soap_get(soap, "ns1:UploadPassphraseResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetAllPassphrases(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAllPassphrases *ns1__GetAllPassphrases)
{
	struct __ns1__GetAllPassphrases soap_tmp___ns1__GetAllPassphrases;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllPassphrases";
	soap_tmp___ns1__GetAllPassphrases.ns1__GetAllPassphrases = ns1__GetAllPassphrases;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAllPassphrases(soap, &soap_tmp___ns1__GetAllPassphrases);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAllPassphrases(soap, &soap_tmp___ns1__GetAllPassphrases, "-ns1:GetAllPassphrases", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAllPassphrases(soap, &soap_tmp___ns1__GetAllPassphrases, "-ns1:GetAllPassphrases", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetAllPassphrases(_ns1__GetAllPassphrasesResponse &ns1__GetAllPassphrasesResponse)
{
	ns1__GetAllPassphrasesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAllPassphrasesResponse.soap_get(soap, "ns1:GetAllPassphrasesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_DeletePassphrase(const char *soap_endpoint_url, const char *soap_action, _ns1__DeletePassphrase *ns1__DeletePassphrase)
{
	struct __ns1__DeletePassphrase soap_tmp___ns1__DeletePassphrase;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeletePassphrase";
	soap_tmp___ns1__DeletePassphrase.ns1__DeletePassphrase = ns1__DeletePassphrase;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeletePassphrase(soap, &soap_tmp___ns1__DeletePassphrase);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeletePassphrase(soap, &soap_tmp___ns1__DeletePassphrase, "-ns1:DeletePassphrase", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeletePassphrase(soap, &soap_tmp___ns1__DeletePassphrase, "-ns1:DeletePassphrase", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_DeletePassphrase(_ns1__DeletePassphraseResponse &ns1__DeletePassphraseResponse)
{
	ns1__DeletePassphraseResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeletePassphraseResponse.soap_get(soap, "ns1:DeletePassphraseResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_UploadCRL(const char *soap_endpoint_url, const char *soap_action, _ns1__UploadCRL *ns1__UploadCRL)
{
	struct __ns1__UploadCRL soap_tmp___ns1__UploadCRL;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCRL";
	soap_tmp___ns1__UploadCRL.ns1__UploadCRL = ns1__UploadCRL;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadCRL(soap, &soap_tmp___ns1__UploadCRL);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadCRL(soap, &soap_tmp___ns1__UploadCRL, "-ns1:UploadCRL", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadCRL(soap, &soap_tmp___ns1__UploadCRL, "-ns1:UploadCRL", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_UploadCRL(_ns1__UploadCRLResponse &ns1__UploadCRLResponse)
{
	ns1__UploadCRLResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadCRLResponse.soap_get(soap, "ns1:UploadCRLResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetCRL(const char *soap_endpoint_url, const char *soap_action, _ns1__GetCRL *ns1__GetCRL)
{
	struct __ns1__GetCRL soap_tmp___ns1__GetCRL;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCRL";
	soap_tmp___ns1__GetCRL.ns1__GetCRL = ns1__GetCRL;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetCRL(soap, &soap_tmp___ns1__GetCRL);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetCRL(soap, &soap_tmp___ns1__GetCRL, "-ns1:GetCRL", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetCRL(soap, &soap_tmp___ns1__GetCRL, "-ns1:GetCRL", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetCRL(_ns1__GetCRLResponse &ns1__GetCRLResponse)
{
	ns1__GetCRLResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetCRLResponse.soap_get(soap, "ns1:GetCRLResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetAllCRLs(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAllCRLs *ns1__GetAllCRLs)
{
	struct __ns1__GetAllCRLs soap_tmp___ns1__GetAllCRLs;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCRLs";
	soap_tmp___ns1__GetAllCRLs.ns1__GetAllCRLs = ns1__GetAllCRLs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAllCRLs(soap, &soap_tmp___ns1__GetAllCRLs);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAllCRLs(soap, &soap_tmp___ns1__GetAllCRLs, "-ns1:GetAllCRLs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAllCRLs(soap, &soap_tmp___ns1__GetAllCRLs, "-ns1:GetAllCRLs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetAllCRLs(_ns1__GetAllCRLsResponse &ns1__GetAllCRLsResponse)
{
	ns1__GetAllCRLsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAllCRLsResponse.soap_get(soap, "ns1:GetAllCRLsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_DeleteCRL(const char *soap_endpoint_url, const char *soap_action, _ns1__DeleteCRL *ns1__DeleteCRL)
{
	struct __ns1__DeleteCRL soap_tmp___ns1__DeleteCRL;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCRL";
	soap_tmp___ns1__DeleteCRL.ns1__DeleteCRL = ns1__DeleteCRL;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteCRL(soap, &soap_tmp___ns1__DeleteCRL);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteCRL(soap, &soap_tmp___ns1__DeleteCRL, "-ns1:DeleteCRL", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteCRL(soap, &soap_tmp___ns1__DeleteCRL, "-ns1:DeleteCRL", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_DeleteCRL(_ns1__DeleteCRLResponse &ns1__DeleteCRLResponse)
{
	ns1__DeleteCRLResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteCRLResponse.soap_get(soap, "ns1:DeleteCRLResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_CreateCertPathValidationPolicy(const char *soap_endpoint_url, const char *soap_action, _ns1__CreateCertPathValidationPolicy *ns1__CreateCertPathValidationPolicy)
{
	struct __ns1__CreateCertPathValidationPolicy soap_tmp___ns1__CreateCertPathValidationPolicy;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertPathValidationPolicy";
	soap_tmp___ns1__CreateCertPathValidationPolicy.ns1__CreateCertPathValidationPolicy = ns1__CreateCertPathValidationPolicy;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateCertPathValidationPolicy(soap, &soap_tmp___ns1__CreateCertPathValidationPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateCertPathValidationPolicy(soap, &soap_tmp___ns1__CreateCertPathValidationPolicy, "-ns1:CreateCertPathValidationPolicy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateCertPathValidationPolicy(soap, &soap_tmp___ns1__CreateCertPathValidationPolicy, "-ns1:CreateCertPathValidationPolicy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_CreateCertPathValidationPolicy(_ns1__CreateCertPathValidationPolicyResponse &ns1__CreateCertPathValidationPolicyResponse)
{
	ns1__CreateCertPathValidationPolicyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateCertPathValidationPolicyResponse.soap_get(soap, "ns1:CreateCertPathValidationPolicyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetCertPathValidationPolicy(const char *soap_endpoint_url, const char *soap_action, _ns1__GetCertPathValidationPolicy *ns1__GetCertPathValidationPolicy)
{
	struct __ns1__GetCertPathValidationPolicy soap_tmp___ns1__GetCertPathValidationPolicy;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertPathValidationPolicy";
	soap_tmp___ns1__GetCertPathValidationPolicy.ns1__GetCertPathValidationPolicy = ns1__GetCertPathValidationPolicy;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetCertPathValidationPolicy(soap, &soap_tmp___ns1__GetCertPathValidationPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetCertPathValidationPolicy(soap, &soap_tmp___ns1__GetCertPathValidationPolicy, "-ns1:GetCertPathValidationPolicy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetCertPathValidationPolicy(soap, &soap_tmp___ns1__GetCertPathValidationPolicy, "-ns1:GetCertPathValidationPolicy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetCertPathValidationPolicy(_ns1__GetCertPathValidationPolicyResponse &ns1__GetCertPathValidationPolicyResponse)
{
	ns1__GetCertPathValidationPolicyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetCertPathValidationPolicyResponse.soap_get(soap, "ns1:GetCertPathValidationPolicyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetAllCertPathValidationPolicies(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAllCertPathValidationPolicies *ns1__GetAllCertPathValidationPolicies)
{
	struct __ns1__GetAllCertPathValidationPolicies soap_tmp___ns1__GetAllCertPathValidationPolicies;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertPathValidationPolicies";
	soap_tmp___ns1__GetAllCertPathValidationPolicies.ns1__GetAllCertPathValidationPolicies = ns1__GetAllCertPathValidationPolicies;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAllCertPathValidationPolicies(soap, &soap_tmp___ns1__GetAllCertPathValidationPolicies);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAllCertPathValidationPolicies(soap, &soap_tmp___ns1__GetAllCertPathValidationPolicies, "-ns1:GetAllCertPathValidationPolicies", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAllCertPathValidationPolicies(soap, &soap_tmp___ns1__GetAllCertPathValidationPolicies, "-ns1:GetAllCertPathValidationPolicies", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetAllCertPathValidationPolicies(_ns1__GetAllCertPathValidationPoliciesResponse &ns1__GetAllCertPathValidationPoliciesResponse)
{
	ns1__GetAllCertPathValidationPoliciesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAllCertPathValidationPoliciesResponse.soap_get(soap, "ns1:GetAllCertPathValidationPoliciesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_DeleteCertPathValidationPolicy(const char *soap_endpoint_url, const char *soap_action, _ns1__DeleteCertPathValidationPolicy *ns1__DeleteCertPathValidationPolicy)
{
	struct __ns1__DeleteCertPathValidationPolicy soap_tmp___ns1__DeleteCertPathValidationPolicy;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertPathValidationPolicy";
	soap_tmp___ns1__DeleteCertPathValidationPolicy.ns1__DeleteCertPathValidationPolicy = ns1__DeleteCertPathValidationPolicy;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteCertPathValidationPolicy(soap, &soap_tmp___ns1__DeleteCertPathValidationPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteCertPathValidationPolicy(soap, &soap_tmp___ns1__DeleteCertPathValidationPolicy, "-ns1:DeleteCertPathValidationPolicy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteCertPathValidationPolicy(soap, &soap_tmp___ns1__DeleteCertPathValidationPolicy, "-ns1:DeleteCertPathValidationPolicy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_DeleteCertPathValidationPolicy(_ns1__DeleteCertPathValidationPolicyResponse &ns1__DeleteCertPathValidationPolicyResponse)
{
	ns1__DeleteCertPathValidationPolicyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteCertPathValidationPolicyResponse.soap_get(soap, "ns1:DeleteCertPathValidationPolicyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_AddServerCertificateAssignment(const char *soap_endpoint_url, const char *soap_action, _ns1__AddServerCertificateAssignment *ns1__AddServerCertificateAssignment)
{
	struct __ns1__AddServerCertificateAssignment soap_tmp___ns1__AddServerCertificateAssignment;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/AddServerCertificateAssignment";
	soap_tmp___ns1__AddServerCertificateAssignment.ns1__AddServerCertificateAssignment = ns1__AddServerCertificateAssignment;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__AddServerCertificateAssignment(soap, &soap_tmp___ns1__AddServerCertificateAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddServerCertificateAssignment(soap, &soap_tmp___ns1__AddServerCertificateAssignment, "-ns1:AddServerCertificateAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddServerCertificateAssignment(soap, &soap_tmp___ns1__AddServerCertificateAssignment, "-ns1:AddServerCertificateAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_AddServerCertificateAssignment(_ns1__AddServerCertificateAssignmentResponse &ns1__AddServerCertificateAssignmentResponse)
{
	ns1__AddServerCertificateAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddServerCertificateAssignmentResponse.soap_get(soap, "ns1:AddServerCertificateAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_RemoveServerCertificateAssignment(const char *soap_endpoint_url, const char *soap_action, _ns1__RemoveServerCertificateAssignment *ns1__RemoveServerCertificateAssignment)
{
	struct __ns1__RemoveServerCertificateAssignment soap_tmp___ns1__RemoveServerCertificateAssignment;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveServerCertificateAssignment";
	soap_tmp___ns1__RemoveServerCertificateAssignment.ns1__RemoveServerCertificateAssignment = ns1__RemoveServerCertificateAssignment;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__RemoveServerCertificateAssignment(soap, &soap_tmp___ns1__RemoveServerCertificateAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__RemoveServerCertificateAssignment(soap, &soap_tmp___ns1__RemoveServerCertificateAssignment, "-ns1:RemoveServerCertificateAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__RemoveServerCertificateAssignment(soap, &soap_tmp___ns1__RemoveServerCertificateAssignment, "-ns1:RemoveServerCertificateAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_RemoveServerCertificateAssignment(_ns1__RemoveServerCertificateAssignmentResponse &ns1__RemoveServerCertificateAssignmentResponse)
{
	ns1__RemoveServerCertificateAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RemoveServerCertificateAssignmentResponse.soap_get(soap, "ns1:RemoveServerCertificateAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_ReplaceServerCertificateAssignment(const char *soap_endpoint_url, const char *soap_action, _ns1__ReplaceServerCertificateAssignment *ns1__ReplaceServerCertificateAssignment)
{
	struct __ns1__ReplaceServerCertificateAssignment soap_tmp___ns1__ReplaceServerCertificateAssignment;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceServerCertificateAssignment";
	soap_tmp___ns1__ReplaceServerCertificateAssignment.ns1__ReplaceServerCertificateAssignment = ns1__ReplaceServerCertificateAssignment;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__ReplaceServerCertificateAssignment(soap, &soap_tmp___ns1__ReplaceServerCertificateAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ReplaceServerCertificateAssignment(soap, &soap_tmp___ns1__ReplaceServerCertificateAssignment, "-ns1:ReplaceServerCertificateAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ReplaceServerCertificateAssignment(soap, &soap_tmp___ns1__ReplaceServerCertificateAssignment, "-ns1:ReplaceServerCertificateAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_ReplaceServerCertificateAssignment(_ns1__ReplaceServerCertificateAssignmentResponse &ns1__ReplaceServerCertificateAssignmentResponse)
{
	ns1__ReplaceServerCertificateAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReplaceServerCertificateAssignmentResponse.soap_get(soap, "ns1:ReplaceServerCertificateAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetAssignedServerCertificates(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAssignedServerCertificates *ns1__GetAssignedServerCertificates)
{
	struct __ns1__GetAssignedServerCertificates soap_tmp___ns1__GetAssignedServerCertificates;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedServerCertificates";
	soap_tmp___ns1__GetAssignedServerCertificates.ns1__GetAssignedServerCertificates = ns1__GetAssignedServerCertificates;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAssignedServerCertificates(soap, &soap_tmp___ns1__GetAssignedServerCertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAssignedServerCertificates(soap, &soap_tmp___ns1__GetAssignedServerCertificates, "-ns1:GetAssignedServerCertificates", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAssignedServerCertificates(soap, &soap_tmp___ns1__GetAssignedServerCertificates, "-ns1:GetAssignedServerCertificates", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetAssignedServerCertificates(_ns1__GetAssignedServerCertificatesResponse &ns1__GetAssignedServerCertificatesResponse)
{
	ns1__GetAssignedServerCertificatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAssignedServerCertificatesResponse.soap_get(soap, "ns1:GetAssignedServerCertificatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_SetEnabledTLSVersions(const char *soap_endpoint_url, const char *soap_action, _ns1__SetEnabledTLSVersions *ns1__SetEnabledTLSVersions)
{
	struct __ns1__SetEnabledTLSVersions soap_tmp___ns1__SetEnabledTLSVersions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/SetEnabledTLSVersions";
	soap_tmp___ns1__SetEnabledTLSVersions.ns1__SetEnabledTLSVersions = ns1__SetEnabledTLSVersions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetEnabledTLSVersions(soap, &soap_tmp___ns1__SetEnabledTLSVersions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetEnabledTLSVersions(soap, &soap_tmp___ns1__SetEnabledTLSVersions, "-ns1:SetEnabledTLSVersions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetEnabledTLSVersions(soap, &soap_tmp___ns1__SetEnabledTLSVersions, "-ns1:SetEnabledTLSVersions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_SetEnabledTLSVersions(_ns1__SetEnabledTLSVersionsResponse &ns1__SetEnabledTLSVersionsResponse)
{
	ns1__SetEnabledTLSVersionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetEnabledTLSVersionsResponse.soap_get(soap, "ns1:SetEnabledTLSVersionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetEnabledTLSVersions(const char *soap_endpoint_url, const char *soap_action, _ns1__GetEnabledTLSVersions *ns1__GetEnabledTLSVersions)
{
	struct __ns1__GetEnabledTLSVersions soap_tmp___ns1__GetEnabledTLSVersions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetEnabledTLSVersions";
	soap_tmp___ns1__GetEnabledTLSVersions.ns1__GetEnabledTLSVersions = ns1__GetEnabledTLSVersions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetEnabledTLSVersions(soap, &soap_tmp___ns1__GetEnabledTLSVersions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetEnabledTLSVersions(soap, &soap_tmp___ns1__GetEnabledTLSVersions, "-ns1:GetEnabledTLSVersions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetEnabledTLSVersions(soap, &soap_tmp___ns1__GetEnabledTLSVersions, "-ns1:GetEnabledTLSVersions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetEnabledTLSVersions(_ns1__GetEnabledTLSVersionsResponse &ns1__GetEnabledTLSVersionsResponse)
{
	ns1__GetEnabledTLSVersionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetEnabledTLSVersionsResponse.soap_get(soap, "ns1:GetEnabledTLSVersionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_SetClientAuthenticationRequired(const char *soap_endpoint_url, const char *soap_action, _ns1__SetClientAuthenticationRequired *ns1__SetClientAuthenticationRequired)
{
	struct __ns1__SetClientAuthenticationRequired soap_tmp___ns1__SetClientAuthenticationRequired;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/SetClientAuthenticationRequired";
	soap_tmp___ns1__SetClientAuthenticationRequired.ns1__SetClientAuthenticationRequired = ns1__SetClientAuthenticationRequired;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetClientAuthenticationRequired(soap, &soap_tmp___ns1__SetClientAuthenticationRequired);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetClientAuthenticationRequired(soap, &soap_tmp___ns1__SetClientAuthenticationRequired, "-ns1:SetClientAuthenticationRequired", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetClientAuthenticationRequired(soap, &soap_tmp___ns1__SetClientAuthenticationRequired, "-ns1:SetClientAuthenticationRequired", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_SetClientAuthenticationRequired(_ns1__SetClientAuthenticationRequiredResponse &ns1__SetClientAuthenticationRequiredResponse)
{
	ns1__SetClientAuthenticationRequiredResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetClientAuthenticationRequiredResponse.soap_get(soap, "ns1:SetClientAuthenticationRequiredResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetClientAuthenticationRequired(const char *soap_endpoint_url, const char *soap_action, _ns1__GetClientAuthenticationRequired *ns1__GetClientAuthenticationRequired)
{
	struct __ns1__GetClientAuthenticationRequired soap_tmp___ns1__GetClientAuthenticationRequired;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetClientAuthenticationRequired";
	soap_tmp___ns1__GetClientAuthenticationRequired.ns1__GetClientAuthenticationRequired = ns1__GetClientAuthenticationRequired;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetClientAuthenticationRequired(soap, &soap_tmp___ns1__GetClientAuthenticationRequired);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetClientAuthenticationRequired(soap, &soap_tmp___ns1__GetClientAuthenticationRequired, "-ns1:GetClientAuthenticationRequired", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetClientAuthenticationRequired(soap, &soap_tmp___ns1__GetClientAuthenticationRequired, "-ns1:GetClientAuthenticationRequired", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetClientAuthenticationRequired(_ns1__GetClientAuthenticationRequiredResponse &ns1__GetClientAuthenticationRequiredResponse)
{
	ns1__GetClientAuthenticationRequiredResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetClientAuthenticationRequiredResponse.soap_get(soap, "ns1:GetClientAuthenticationRequiredResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_AddCertPathValidationPolicyAssignment(const char *soap_endpoint_url, const char *soap_action, _ns1__AddCertPathValidationPolicyAssignment *ns1__AddCertPathValidationPolicyAssignment)
{
	struct __ns1__AddCertPathValidationPolicyAssignment soap_tmp___ns1__AddCertPathValidationPolicyAssignment;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/AddCertPathValidationPolicyAssignment";
	soap_tmp___ns1__AddCertPathValidationPolicyAssignment.ns1__AddCertPathValidationPolicyAssignment = ns1__AddCertPathValidationPolicyAssignment;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__AddCertPathValidationPolicyAssignment(soap, &soap_tmp___ns1__AddCertPathValidationPolicyAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddCertPathValidationPolicyAssignment(soap, &soap_tmp___ns1__AddCertPathValidationPolicyAssignment, "-ns1:AddCertPathValidationPolicyAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddCertPathValidationPolicyAssignment(soap, &soap_tmp___ns1__AddCertPathValidationPolicyAssignment, "-ns1:AddCertPathValidationPolicyAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_AddCertPathValidationPolicyAssignment(_ns1__AddCertPathValidationPolicyAssignmentResponse &ns1__AddCertPathValidationPolicyAssignmentResponse)
{
	ns1__AddCertPathValidationPolicyAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddCertPathValidationPolicyAssignmentResponse.soap_get(soap, "ns1:AddCertPathValidationPolicyAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_RemoveCertPathValidationPolicyAssignment(const char *soap_endpoint_url, const char *soap_action, _ns1__RemoveCertPathValidationPolicyAssignment *ns1__RemoveCertPathValidationPolicyAssignment)
{
	struct __ns1__RemoveCertPathValidationPolicyAssignment soap_tmp___ns1__RemoveCertPathValidationPolicyAssignment;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveCertPathValidationPolicyAssignment";
	soap_tmp___ns1__RemoveCertPathValidationPolicyAssignment.ns1__RemoveCertPathValidationPolicyAssignment = ns1__RemoveCertPathValidationPolicyAssignment;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__RemoveCertPathValidationPolicyAssignment(soap, &soap_tmp___ns1__RemoveCertPathValidationPolicyAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__RemoveCertPathValidationPolicyAssignment(soap, &soap_tmp___ns1__RemoveCertPathValidationPolicyAssignment, "-ns1:RemoveCertPathValidationPolicyAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__RemoveCertPathValidationPolicyAssignment(soap, &soap_tmp___ns1__RemoveCertPathValidationPolicyAssignment, "-ns1:RemoveCertPathValidationPolicyAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_RemoveCertPathValidationPolicyAssignment(_ns1__RemoveCertPathValidationPolicyAssignmentResponse &ns1__RemoveCertPathValidationPolicyAssignmentResponse)
{
	ns1__RemoveCertPathValidationPolicyAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RemoveCertPathValidationPolicyAssignmentResponse.soap_get(soap, "ns1:RemoveCertPathValidationPolicyAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_ReplaceCertPathValidationPolicyAssignment(const char *soap_endpoint_url, const char *soap_action, _ns1__ReplaceCertPathValidationPolicyAssignment *ns1__ReplaceCertPathValidationPolicyAssignment)
{
	struct __ns1__ReplaceCertPathValidationPolicyAssignment soap_tmp___ns1__ReplaceCertPathValidationPolicyAssignment;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceCertPathValidationPolicyAssignment";
	soap_tmp___ns1__ReplaceCertPathValidationPolicyAssignment.ns1__ReplaceCertPathValidationPolicyAssignment = ns1__ReplaceCertPathValidationPolicyAssignment;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__ReplaceCertPathValidationPolicyAssignment(soap, &soap_tmp___ns1__ReplaceCertPathValidationPolicyAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ReplaceCertPathValidationPolicyAssignment(soap, &soap_tmp___ns1__ReplaceCertPathValidationPolicyAssignment, "-ns1:ReplaceCertPathValidationPolicyAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ReplaceCertPathValidationPolicyAssignment(soap, &soap_tmp___ns1__ReplaceCertPathValidationPolicyAssignment, "-ns1:ReplaceCertPathValidationPolicyAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_ReplaceCertPathValidationPolicyAssignment(_ns1__ReplaceCertPathValidationPolicyAssignmentResponse &ns1__ReplaceCertPathValidationPolicyAssignmentResponse)
{
	ns1__ReplaceCertPathValidationPolicyAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReplaceCertPathValidationPolicyAssignmentResponse.soap_get(soap, "ns1:ReplaceCertPathValidationPolicyAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetAssignedCertPathValidationPolicies(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAssignedCertPathValidationPolicies *ns1__GetAssignedCertPathValidationPolicies)
{
	struct __ns1__GetAssignedCertPathValidationPolicies soap_tmp___ns1__GetAssignedCertPathValidationPolicies;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedCertPathValidationPolicies";
	soap_tmp___ns1__GetAssignedCertPathValidationPolicies.ns1__GetAssignedCertPathValidationPolicies = ns1__GetAssignedCertPathValidationPolicies;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAssignedCertPathValidationPolicies(soap, &soap_tmp___ns1__GetAssignedCertPathValidationPolicies);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAssignedCertPathValidationPolicies(soap, &soap_tmp___ns1__GetAssignedCertPathValidationPolicies, "-ns1:GetAssignedCertPathValidationPolicies", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAssignedCertPathValidationPolicies(soap, &soap_tmp___ns1__GetAssignedCertPathValidationPolicies, "-ns1:GetAssignedCertPathValidationPolicies", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetAssignedCertPathValidationPolicies(_ns1__GetAssignedCertPathValidationPoliciesResponse &ns1__GetAssignedCertPathValidationPoliciesResponse)
{
	ns1__GetAssignedCertPathValidationPoliciesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAssignedCertPathValidationPoliciesResponse.soap_get(soap, "ns1:GetAssignedCertPathValidationPoliciesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_AddDot1XConfiguration(const char *soap_endpoint_url, const char *soap_action, _ns1__AddDot1XConfiguration *ns1__AddDot1XConfiguration)
{
	struct __ns1__AddDot1XConfiguration soap_tmp___ns1__AddDot1XConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/AddDot1XConfiguration";
	soap_tmp___ns1__AddDot1XConfiguration.ns1__AddDot1XConfiguration = ns1__AddDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__AddDot1XConfiguration(soap, &soap_tmp___ns1__AddDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddDot1XConfiguration(soap, &soap_tmp___ns1__AddDot1XConfiguration, "-ns1:AddDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddDot1XConfiguration(soap, &soap_tmp___ns1__AddDot1XConfiguration, "-ns1:AddDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_AddDot1XConfiguration(_ns1__AddDot1XConfigurationResponse &ns1__AddDot1XConfigurationResponse)
{
	ns1__AddDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddDot1XConfigurationResponse.soap_get(soap, "ns1:AddDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetAllDot1XConfigurations(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAllDot1XConfigurations *ns1__GetAllDot1XConfigurations)
{
	struct __ns1__GetAllDot1XConfigurations soap_tmp___ns1__GetAllDot1XConfigurations;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllDot1XConfigurations";
	soap_tmp___ns1__GetAllDot1XConfigurations.ns1__GetAllDot1XConfigurations = ns1__GetAllDot1XConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAllDot1XConfigurations(soap, &soap_tmp___ns1__GetAllDot1XConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAllDot1XConfigurations(soap, &soap_tmp___ns1__GetAllDot1XConfigurations, "-ns1:GetAllDot1XConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAllDot1XConfigurations(soap, &soap_tmp___ns1__GetAllDot1XConfigurations, "-ns1:GetAllDot1XConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetAllDot1XConfigurations(_ns1__GetAllDot1XConfigurationsResponse &ns1__GetAllDot1XConfigurationsResponse)
{
	ns1__GetAllDot1XConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAllDot1XConfigurationsResponse.soap_get(soap, "ns1:GetAllDot1XConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetDot1XConfiguration(const char *soap_endpoint_url, const char *soap_action, _ns1__GetDot1XConfiguration *ns1__GetDot1XConfiguration)
{
	struct __ns1__GetDot1XConfiguration soap_tmp___ns1__GetDot1XConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetDot1XConfiguration";
	soap_tmp___ns1__GetDot1XConfiguration.ns1__GetDot1XConfiguration = ns1__GetDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDot1XConfiguration(soap, &soap_tmp___ns1__GetDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDot1XConfiguration(soap, &soap_tmp___ns1__GetDot1XConfiguration, "-ns1:GetDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDot1XConfiguration(soap, &soap_tmp___ns1__GetDot1XConfiguration, "-ns1:GetDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetDot1XConfiguration(_ns1__GetDot1XConfigurationResponse &ns1__GetDot1XConfigurationResponse)
{
	ns1__GetDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDot1XConfigurationResponse.soap_get(soap, "ns1:GetDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_DeleteDot1XConfiguration(const char *soap_endpoint_url, const char *soap_action, _ns1__DeleteDot1XConfiguration *ns1__DeleteDot1XConfiguration)
{
	struct __ns1__DeleteDot1XConfiguration soap_tmp___ns1__DeleteDot1XConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteDot1XConfiguration";
	soap_tmp___ns1__DeleteDot1XConfiguration.ns1__DeleteDot1XConfiguration = ns1__DeleteDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteDot1XConfiguration(soap, &soap_tmp___ns1__DeleteDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteDot1XConfiguration(soap, &soap_tmp___ns1__DeleteDot1XConfiguration, "-ns1:DeleteDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteDot1XConfiguration(soap, &soap_tmp___ns1__DeleteDot1XConfiguration, "-ns1:DeleteDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_DeleteDot1XConfiguration(_ns1__DeleteDot1XConfigurationResponse &ns1__DeleteDot1XConfigurationResponse)
{
	ns1__DeleteDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteDot1XConfigurationResponse.soap_get(soap, "ns1:DeleteDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_SetNetworkInterfaceDot1XConfiguration(const char *soap_endpoint_url, const char *soap_action, _ns1__SetNetworkInterfaceDot1XConfiguration *ns1__SetNetworkInterfaceDot1XConfiguration)
{
	struct __ns1__SetNetworkInterfaceDot1XConfiguration soap_tmp___ns1__SetNetworkInterfaceDot1XConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/SetNetworkInterfaceDot1XConfiguration";
	soap_tmp___ns1__SetNetworkInterfaceDot1XConfiguration.ns1__SetNetworkInterfaceDot1XConfiguration = ns1__SetNetworkInterfaceDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___ns1__SetNetworkInterfaceDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___ns1__SetNetworkInterfaceDot1XConfiguration, "-ns1:SetNetworkInterfaceDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___ns1__SetNetworkInterfaceDot1XConfiguration, "-ns1:SetNetworkInterfaceDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_SetNetworkInterfaceDot1XConfiguration(_ns1__SetNetworkInterfaceDot1XConfigurationResponse &ns1__SetNetworkInterfaceDot1XConfigurationResponse)
{
	ns1__SetNetworkInterfaceDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetNetworkInterfaceDot1XConfigurationResponse.soap_get(soap, "ns1:SetNetworkInterfaceDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_GetNetworkInterfaceDot1XConfiguration(const char *soap_endpoint_url, const char *soap_action, _ns1__GetNetworkInterfaceDot1XConfiguration *ns1__GetNetworkInterfaceDot1XConfiguration)
{
	struct __ns1__GetNetworkInterfaceDot1XConfiguration soap_tmp___ns1__GetNetworkInterfaceDot1XConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetNetworkInterfaceDot1XConfiguration";
	soap_tmp___ns1__GetNetworkInterfaceDot1XConfiguration.ns1__GetNetworkInterfaceDot1XConfiguration = ns1__GetNetworkInterfaceDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___ns1__GetNetworkInterfaceDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___ns1__GetNetworkInterfaceDot1XConfiguration, "-ns1:GetNetworkInterfaceDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___ns1__GetNetworkInterfaceDot1XConfiguration, "-ns1:GetNetworkInterfaceDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_GetNetworkInterfaceDot1XConfiguration(_ns1__GetNetworkInterfaceDot1XConfigurationResponse &ns1__GetNetworkInterfaceDot1XConfigurationResponse)
{
	ns1__GetNetworkInterfaceDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetNetworkInterfaceDot1XConfigurationResponse.soap_get(soap, "ns1:GetNetworkInterfaceDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::send_DeleteNetworkInterfaceDot1XConfiguration(const char *soap_endpoint_url, const char *soap_action, _ns1__DeleteNetworkInterfaceDot1XConfiguration *ns1__DeleteNetworkInterfaceDot1XConfiguration)
{
	struct __ns1__DeleteNetworkInterfaceDot1XConfiguration soap_tmp___ns1__DeleteNetworkInterfaceDot1XConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteNetworkInterfaceDot1XConfiguration";
	soap_tmp___ns1__DeleteNetworkInterfaceDot1XConfiguration.ns1__DeleteNetworkInterfaceDot1XConfiguration = ns1__DeleteNetworkInterfaceDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___ns1__DeleteNetworkInterfaceDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___ns1__DeleteNetworkInterfaceDot1XConfiguration, "-ns1:DeleteNetworkInterfaceDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___ns1__DeleteNetworkInterfaceDot1XConfiguration, "-ns1:DeleteNetworkInterfaceDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int AdvancedSecurityServiceBindingProxy::recv_DeleteNetworkInterfaceDot1XConfiguration(_ns1__DeleteNetworkInterfaceDot1XConfigurationResponse &ns1__DeleteNetworkInterfaceDot1XConfigurationResponse)
{
	ns1__DeleteNetworkInterfaceDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteNetworkInterfaceDot1XConfigurationResponse.soap_get(soap, "ns1:DeleteNetworkInterfaceDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
